group 'com.frostwire'
version '1.1.0.0'

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven-publish'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    mavenCentral()
}

dependencies {
}

jar {
    archiveName = 'jlibtorrent-' + project.version + '.jar'

    manifest {
        attributes 'Main-Class': 'com.frostwire.jlibtorrent.tools.Main'
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadoc2(type: Javadoc) {
    source = sourceSets.main.allJava
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc2) {
    classifier = 'javadoc'
    from javadoc2.destinationDir
}

task nativeAndroidJar(type: Zip) {
    destinationDir file("$buildDir/libs")
    baseName 'jlibtorrent-android'
    extension 'jar'
    from fileTree(dir: 'binaries/android', include: '**/*.so')
    into 'lib/'
}

// signature tasks
task signJar(type: Sign) {
    sign jar
}

def getJarSignature = {
    return project.tasks.signJar.signatureFiles.collect { it }[0]
}

task signSourcesJar(type: Sign) {
    sign sourcesJar
}

def getSourcesJarSignature = {
    return project.tasks.signSourcesJar.signatureFiles.collect{it}[0]
}

task signJavadocJar(type: Sign) {
    sign javadocJar
}

def getJavadocJarSignature = {
    return project.tasks.signJavadocJar.signatureFiles.collect{it}[0]
}
// end signature tasks

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeAndroidJar)
}

tasks.whenTaskAdded {
    if (it.name.startsWith('publish')) it.dependsOn(['signJar', 'signSourcesJar', 'signJavadocJar'])
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId 'jlibtorrent'
            version project.version

            from components.java

            artifacts = [sourcesJar, javadocJar]

            artifact getJarSignature()
            artifact(getSourcesJarSignature()) {
                classifier 'sources'
            }
            artifact(getJavadocJarSignature()) {
                classifier 'javadoc'
            }

            pom.withXml {
                asNode().children().last() + pomData()
            }
        }
        nativeAndroid(MavenPublication) {
            groupId project.group
            artifactId 'jlibtorrent-android'
            version project.version

            artifact nativeAndroidJar

            pom.withXml {
                asNode().children().last() + pomData()
            }
        }
    }

    repositories {
        maven {
            url 'repo'
        }
    }
}

def pomData() {
    return {
        resolveStrategy = Closure.DELEGATE_FIRST
        name 'frostwire-jlibtorrent android binary'
        description 'A swig Java interface for libtorrent by the makers of FrostWire.'
        url 'https://github.com/frostwire/frostwire-jlibtorrent'
        scm {
            connection 'scm:git:git://github.com/frostwire/frostwire-jlibtorrent.git'
            developerConnection 'scm:git:ssh:git@github.com/frostwire/frostwire-jlibtorrent.git'
            url 'https://github.com/frostwire/frostwire-jlibtorrent'
        }
        licenses {
            license {
                name 'The MIT License'
                url 'https://github.com/frostwire/frostwire-jlibtorrent/blob/master/LICENSE.md'
            }
        }
        developers {
            developer {
                id 'gubatron'
                name 'Angel Leon'
                email 'gubatron@gmail.com'
            }
            developer {
                id 'aldenml'
                name 'Alden Torres'
                email 'aldenml@gmail.com'
            }
        }
    }
}
