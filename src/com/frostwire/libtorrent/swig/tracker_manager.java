/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.libtorrent.swig;

public class tracker_manager {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected tracker_manager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(tracker_manager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_tracker_manager(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public tracker_manager(SWIGTYPE_p_libtorrent__aux__session_impl ses, proxy_settings ps) {
    this(libtorrent_jni.new_tracker_manager(SWIGTYPE_p_libtorrent__aux__session_impl.getCPtr(ses), proxy_settings.getCPtr(ps), ps), true);
  }

  public void queue_request(SWIGTYPE_p_io_service ios, connection_queue cc, tracker_request r, String auth, SWIGTYPE_p_boost__weak_ptrT_libtorrent__request_callback_t c) {
    libtorrent_jni.tracker_manager_queue_request__SWIG_0(swigCPtr, this, SWIGTYPE_p_io_service.getCPtr(ios), connection_queue.getCPtr(cc), cc, tracker_request.getCPtr(r), r, auth, SWIGTYPE_p_boost__weak_ptrT_libtorrent__request_callback_t.getCPtr(c));
  }

  public void queue_request(SWIGTYPE_p_io_service ios, connection_queue cc, tracker_request r, String auth) {
    libtorrent_jni.tracker_manager_queue_request__SWIG_1(swigCPtr, this, SWIGTYPE_p_io_service.getCPtr(ios), connection_queue.getCPtr(cc), cc, tracker_request.getCPtr(r), r, auth);
  }

  public void abort_all_requests(boolean all) {
    libtorrent_jni.tracker_manager_abort_all_requests__SWIG_0(swigCPtr, this, all);
  }

  public void abort_all_requests() {
    libtorrent_jni.tracker_manager_abort_all_requests__SWIG_1(swigCPtr, this);
  }

  public void remove_request(tracker_connection arg0) {
    libtorrent_jni.tracker_manager_remove_request(swigCPtr, this, tracker_connection.getCPtr(arg0), arg0);
  }

  public boolean empty() {
    return libtorrent_jni.tracker_manager_empty(swigCPtr, this);
  }

  public int num_requests() {
    return libtorrent_jni.tracker_manager_num_requests(swigCPtr, this);
  }

  public void sent_bytes(int bytes) {
    libtorrent_jni.tracker_manager_sent_bytes(swigCPtr, this, bytes);
  }

  public void received_bytes(int bytes) {
    libtorrent_jni.tracker_manager_received_bytes(swigCPtr, this, bytes);
  }

  public boolean incoming_packet(error_code e, SWIGTYPE_p_udp__endpoint ep, String buf, int size) {
    return libtorrent_jni.tracker_manager_incoming_packet__SWIG_0(swigCPtr, this, error_code.getCPtr(e), e, SWIGTYPE_p_udp__endpoint.getCPtr(ep), buf, size);
  }

  public boolean incoming_packet(error_code e, String hostname, String buf, int size) {
    return libtorrent_jni.tracker_manager_incoming_packet__SWIG_1(swigCPtr, this, error_code.getCPtr(e), e, hostname, buf, size);
  }

}
