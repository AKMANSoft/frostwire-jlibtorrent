/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.libtorrent.swig;

public class tracker_connection extends timeout_handler {
  private long swigCPtr;
  private boolean swigCMemOwnDerived;

  protected tracker_connection(long cPtr, boolean cMemoryOwn) {
    super(libtorrent_jni.tracker_connection_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(tracker_connection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwnDerived) {
      swigCMemOwnDerived = false;
      libtorrent_jni.delete_tracker_connection(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public request_callback requester() {
    long cPtr = libtorrent_jni.tracker_connection_requester(swigCPtr, this);
    return (cPtr == 0) ? null : new request_callback(cPtr, true);
  }

  public tracker_request tracker_req() {
    return new tracker_request(libtorrent_jni.tracker_connection_tracker_req(swigCPtr, this), false);
  }

  public void fail(error_code ec, int code, String msg, int interval, int min_interval) {
    libtorrent_jni.tracker_connection_fail__SWIG_0(swigCPtr, this, error_code.getCPtr(ec), ec, code, msg, interval, min_interval);
  }

  public void fail(error_code ec, int code, String msg, int interval) {
    libtorrent_jni.tracker_connection_fail__SWIG_1(swigCPtr, this, error_code.getCPtr(ec), ec, code, msg, interval);
  }

  public void fail(error_code ec, int code, String msg) {
    libtorrent_jni.tracker_connection_fail__SWIG_2(swigCPtr, this, error_code.getCPtr(ec), ec, code, msg);
  }

  public void fail(error_code ec, int code) {
    libtorrent_jni.tracker_connection_fail__SWIG_3(swigCPtr, this, error_code.getCPtr(ec), ec, code);
  }

  public void fail(error_code ec) {
    libtorrent_jni.tracker_connection_fail__SWIG_4(swigCPtr, this, error_code.getCPtr(ec), ec);
  }

  public void start() {
    libtorrent_jni.tracker_connection_start(swigCPtr, this);
  }

  public void close() {
    libtorrent_jni.tracker_connection_close(swigCPtr, this);
  }

  public address bind_interface() {
    return new address(libtorrent_jni.tracker_connection_bind_interface(swigCPtr, this), false);
  }

  public void sent_bytes(int bytes) {
    libtorrent_jni.tracker_connection_sent_bytes(swigCPtr, this, bytes);
  }

  public void received_bytes(int bytes) {
    libtorrent_jni.tracker_connection_received_bytes(swigCPtr, this, bytes);
  }

  public boolean on_receive(error_code ec, SWIGTYPE_p_udp__endpoint ep, String buf, int size) {
    return libtorrent_jni.tracker_connection_on_receive(swigCPtr, this, error_code.getCPtr(ec), ec, SWIGTYPE_p_udp__endpoint.getCPtr(ep), buf, size);
  }

  public boolean on_receive_hostname(error_code ec, String hostname, String buf, int size) {
    return libtorrent_jni.tracker_connection_on_receive_hostname(swigCPtr, this, error_code.getCPtr(ec), ec, hostname, buf, size);
  }

  public tracker_connection self() {
    long cPtr = libtorrent_jni.tracker_connection_self(swigCPtr, this);
    return (cPtr == 0) ? null : new tracker_connection(cPtr, true);
  }

}
