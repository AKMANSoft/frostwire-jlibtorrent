/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class feed {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected feed(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(feed obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_feed(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public feed(SWIGTYPE_p_libtorrent__aux__session_impl ses, feed_settings feed) {
    this(libtorrent_jni.new_feed(SWIGTYPE_p_libtorrent__aux__session_impl.getCPtr(ses), feed_settings.getCPtr(feed), feed), true);
  }

  public void on_feed(error_code ec, http_parser parser, String data, int size) {
    libtorrent_jni.feed_on_feed(swigCPtr, this, error_code.getCPtr(ec), ec, http_parser.getCPtr(parser), parser, data, size);
  }

  public int update_feed() {
    return libtorrent_jni.feed_update_feed(swigCPtr, this);
  }

  public SWIGTYPE_p_libtorrent__aux__session_impl session() {
    return new SWIGTYPE_p_libtorrent__aux__session_impl(libtorrent_jni.feed_session(swigCPtr, this), false);
  }

  public void set_settings(feed_settings s) {
    libtorrent_jni.feed_set_settings(swigCPtr, this, feed_settings.getCPtr(s), s);
  }

  public void get_settings(feed_settings s) {
    libtorrent_jni.feed_get_settings(swigCPtr, this, feed_settings.getCPtr(s), s);
  }

  public void get_feed_status(feed_status ret) {
    libtorrent_jni.feed_get_feed_status(swigCPtr, this, feed_status.getCPtr(ret), ret);
  }

  public int next_update(int now) {
    return libtorrent_jni.feed_next_update(swigCPtr, this, now);
  }

  public void load_state(lazy_entry rd) {
    libtorrent_jni.feed_load_state(swigCPtr, this, lazy_entry.getCPtr(rd), rd);
  }

  public void save_state(entry rd) {
    libtorrent_jni.feed_save_state(swigCPtr, this, entry.getCPtr(rd), rd);
  }

  public void add_item(feed_item item) {
    libtorrent_jni.feed_add_item(swigCPtr, this, feed_item.getCPtr(item), item);
  }

  public feed_handle my_handle() {
    return new feed_handle(libtorrent_jni.feed_my_handle(swigCPtr, this), true);
  }

  public void setM_error(error_code value) {
    libtorrent_jni.feed_m_error_set(swigCPtr, this, error_code.getCPtr(value), value);
  }

  public error_code getM_error() {
    long cPtr = libtorrent_jni.feed_m_error_get(swigCPtr, this);
    return (cPtr == 0) ? null : new error_code(cPtr, false);
  }

  public void setM_items(feed_item_vector value) {
    libtorrent_jni.feed_m_items_set(swigCPtr, this, feed_item_vector.getCPtr(value), value);
  }

  public feed_item_vector getM_items() {
    long cPtr = libtorrent_jni.feed_m_items_get(swigCPtr, this);
    return (cPtr == 0) ? null : new feed_item_vector(cPtr, false);
  }

  public void setM_urls(SWIGTYPE_p_std__setT_std__string_t value) {
    libtorrent_jni.feed_m_urls_set(swigCPtr, this, SWIGTYPE_p_std__setT_std__string_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__setT_std__string_t getM_urls() {
    long cPtr = libtorrent_jni.feed_m_urls_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__setT_std__string_t(cPtr, false);
  }

  public void setM_added(string_long_map value) {
    libtorrent_jni.feed_m_added_set(swigCPtr, this, string_long_map.getCPtr(value), value);
  }

  public string_long_map getM_added() {
    long cPtr = libtorrent_jni.feed_m_added_get(swigCPtr, this);
    return (cPtr == 0) ? null : new string_long_map(cPtr, false);
  }

  public void setM_title(String value) {
    libtorrent_jni.feed_m_title_set(swigCPtr, this, value);
  }

  public String getM_title() {
    return libtorrent_jni.feed_m_title_get(swigCPtr, this);
  }

  public void setM_description(String value) {
    libtorrent_jni.feed_m_description_set(swigCPtr, this, value);
  }

  public String getM_description() {
    return libtorrent_jni.feed_m_description_get(swigCPtr, this);
  }

  public void setM_last_attempt(int value) {
    libtorrent_jni.feed_m_last_attempt_set(swigCPtr, this, value);
  }

  public int getM_last_attempt() {
    return libtorrent_jni.feed_m_last_attempt_get(swigCPtr, this);
  }

  public void setM_last_update(int value) {
    libtorrent_jni.feed_m_last_update_set(swigCPtr, this, value);
  }

  public int getM_last_update() {
    return libtorrent_jni.feed_m_last_update_get(swigCPtr, this);
  }

  public void setM_ttl(int value) {
    libtorrent_jni.feed_m_ttl_set(swigCPtr, this, value);
  }

  public int getM_ttl() {
    return libtorrent_jni.feed_m_ttl_get(swigCPtr, this);
  }

  public void setM_failures(int value) {
    libtorrent_jni.feed_m_failures_set(swigCPtr, this, value);
  }

  public int getM_failures() {
    return libtorrent_jni.feed_m_failures_get(swigCPtr, this);
  }

  public void setM_updating(boolean value) {
    libtorrent_jni.feed_m_updating_set(swigCPtr, this, value);
  }

  public boolean getM_updating() {
    return libtorrent_jni.feed_m_updating_get(swigCPtr, this);
  }

  public void setM_settings(feed_settings value) {
    libtorrent_jni.feed_m_settings_set(swigCPtr, this, feed_settings.getCPtr(value), value);
  }

  public feed_settings getM_settings() {
    long cPtr = libtorrent_jni.feed_m_settings_get(swigCPtr, this);
    return (cPtr == 0) ? null : new feed_settings(cPtr, false);
  }

}
