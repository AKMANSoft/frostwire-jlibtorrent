/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class buffer_allocator_interface {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected buffer_allocator_interface(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(buffer_allocator_interface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_buffer_allocator_interface(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public String allocate_disk_buffer(String category) {
    return libtorrent_jni.buffer_allocator_interface_allocate_disk_buffer__SWIG_0(swigCPtr, this, category);
  }

  public void free_disk_buffer(String b) {
    libtorrent_jni.buffer_allocator_interface_free_disk_buffer(swigCPtr, this, b);
  }

  public void reclaim_block(SWIGTYPE_p_block_cache_reference ref) {
    libtorrent_jni.buffer_allocator_interface_reclaim_block(swigCPtr, this, SWIGTYPE_p_block_cache_reference.getCPtr(ref));
  }

  public String allocate_disk_buffer(SWIGTYPE_p_bool exceeded, SWIGTYPE_p_boost__shared_ptrT_libtorrent__disk_observer_t o, String category) {
    return libtorrent_jni.buffer_allocator_interface_allocate_disk_buffer__SWIG_1(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(exceeded), SWIGTYPE_p_boost__shared_ptrT_libtorrent__disk_observer_t.getCPtr(o), category);
  }

  public String async_allocate_disk_buffer(String category, SWIGTYPE_p_boost__functionT_void_fchar_pF_t handler) {
    return libtorrent_jni.buffer_allocator_interface_async_allocate_disk_buffer(swigCPtr, this, category, SWIGTYPE_p_boost__functionT_void_fchar_pF_t.getCPtr(handler));
  }

}
