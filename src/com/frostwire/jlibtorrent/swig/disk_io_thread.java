/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class disk_io_thread {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected disk_io_thread(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(disk_io_thread obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_disk_io_thread(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public disk_io_thread(SWIGTYPE_p_io_service ios, SWIGTYPE_p_boost__functionT_void_fF_t queue_callback, file_pool fp, int block_size) {
    this(libtorrent_jni.new_disk_io_thread__SWIG_0(SWIGTYPE_p_io_service.getCPtr(ios), SWIGTYPE_p_boost__functionT_void_fF_t.getCPtr(queue_callback), file_pool.getCPtr(fp), fp, block_size), true);
  }

  public disk_io_thread(SWIGTYPE_p_io_service ios, SWIGTYPE_p_boost__functionT_void_fF_t queue_callback, file_pool fp) {
    this(libtorrent_jni.new_disk_io_thread__SWIG_1(SWIGTYPE_p_io_service.getCPtr(ios), SWIGTYPE_p_boost__functionT_void_fF_t.getCPtr(queue_callback), file_pool.getCPtr(fp), fp), true);
  }

  public void abort() {
    libtorrent_jni.disk_io_thread_abort(swigCPtr, this);
  }

  public void join() {
    libtorrent_jni.disk_io_thread_join(swigCPtr, this);
  }

  public void stop(piece_manager s) {
    libtorrent_jni.disk_io_thread_stop(swigCPtr, this, piece_manager.getCPtr(s), s);
  }

  public int add_job(disk_io_job j, SWIGTYPE_p_boost__functionT_void_fint_libtorrent__disk_io_job_const_RF_t f) {
    return libtorrent_jni.disk_io_thread_add_job__SWIG_0(swigCPtr, this, disk_io_job.getCPtr(j), j, SWIGTYPE_p_boost__functionT_void_fint_libtorrent__disk_io_job_const_RF_t.getCPtr(f));
  }

  public int add_job(disk_io_job j) {
    return libtorrent_jni.disk_io_thread_add_job__SWIG_1(swigCPtr, this, disk_io_job.getCPtr(j), j);
  }

  public long queue_buffer_size() {
    return libtorrent_jni.disk_io_thread_queue_buffer_size(swigCPtr, this);
  }

  public boolean can_write() {
    return libtorrent_jni.disk_io_thread_can_write(swigCPtr, this);
  }

  public void get_cache_info(sha1_hash ih, cached_piece_info_vector ret) {
    libtorrent_jni.disk_io_thread_get_cache_info(swigCPtr, this, sha1_hash.getCPtr(ih), ih, cached_piece_info_vector.getCPtr(ret), ret);
  }

  public cache_status status() {
    return new cache_status(libtorrent_jni.disk_io_thread_status(swigCPtr, this), true);
  }

  public void thread_fun() {
    libtorrent_jni.disk_io_thread_thread_fun(swigCPtr, this);
  }

  static public class cached_block_entry {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected cached_block_entry(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(cached_block_entry obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libtorrent_jni.delete_disk_io_thread_cached_block_entry(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public cached_block_entry() {
      this(libtorrent_jni.new_disk_io_thread_cached_block_entry(), true);
    }
  
    public void setBuf(String value) {
      libtorrent_jni.disk_io_thread_cached_block_entry_buf_set(swigCPtr, this, value);
    }
  
    public String getBuf() {
      return libtorrent_jni.disk_io_thread_cached_block_entry_buf_get(swigCPtr, this);
    }
  
    public void setCallback(SWIGTYPE_p_boost__functionT_void_fint_libtorrent__disk_io_job_const_RF_t value) {
      libtorrent_jni.disk_io_thread_cached_block_entry_callback_set(swigCPtr, this, SWIGTYPE_p_boost__functionT_void_fint_libtorrent__disk_io_job_const_RF_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_boost__functionT_void_fint_libtorrent__disk_io_job_const_RF_t getCallback() {
      long cPtr = libtorrent_jni.disk_io_thread_cached_block_entry_callback_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_boost__functionT_void_fint_libtorrent__disk_io_job_const_RF_t(cPtr, false);
    }
  
  }

  static public class cached_piece_entry {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected cached_piece_entry(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(cached_piece_entry obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libtorrent_jni.delete_disk_io_thread_cached_piece_entry(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setPiece(int value) {
      libtorrent_jni.disk_io_thread_cached_piece_entry_piece_set(swigCPtr, this, value);
    }
  
    public int getPiece() {
      return libtorrent_jni.disk_io_thread_cached_piece_entry_piece_get(swigCPtr, this);
    }
  
    public void setStorage(piece_manager value) {
      libtorrent_jni.disk_io_thread_cached_piece_entry_storage_set(swigCPtr, this, piece_manager.getCPtr(value), value);
    }
  
    public piece_manager getStorage() {
      long cPtr = libtorrent_jni.disk_io_thread_cached_piece_entry_storage_get(swigCPtr, this);
      return (cPtr == 0) ? null : new piece_manager(cPtr, true);
    }
  
    public void setBlocks(SWIGTYPE_p_boost__shared_arrayT_libtorrent__disk_io_thread__cached_block_entry_t value) {
      libtorrent_jni.disk_io_thread_cached_piece_entry_blocks_set(swigCPtr, this, SWIGTYPE_p_boost__shared_arrayT_libtorrent__disk_io_thread__cached_block_entry_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_boost__shared_arrayT_libtorrent__disk_io_thread__cached_block_entry_t getBlocks() {
      long cPtr = libtorrent_jni.disk_io_thread_cached_piece_entry_blocks_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_boost__shared_arrayT_libtorrent__disk_io_thread__cached_block_entry_t(cPtr, false);
    }
  
    public void setExpire(SWIGTYPE_p_boost__posix_time__ptime value) {
      libtorrent_jni.disk_io_thread_cached_piece_entry_expire_set(swigCPtr, this, SWIGTYPE_p_boost__posix_time__ptime.getCPtr(value));
    }
  
    public SWIGTYPE_p_boost__posix_time__ptime getExpire() {
      return new SWIGTYPE_p_boost__posix_time__ptime(libtorrent_jni.disk_io_thread_cached_piece_entry_expire_get(swigCPtr, this), true);
    }
  
    public void setNum_blocks(int value) {
      libtorrent_jni.disk_io_thread_cached_piece_entry_num_blocks_set(swigCPtr, this, value);
    }
  
    public int getNum_blocks() {
      return libtorrent_jni.disk_io_thread_cached_piece_entry_num_blocks_get(swigCPtr, this);
    }
  
    public void setNum_contiguous_blocks(int value) {
      libtorrent_jni.disk_io_thread_cached_piece_entry_num_contiguous_blocks_set(swigCPtr, this, value);
    }
  
    public int getNum_contiguous_blocks() {
      return libtorrent_jni.disk_io_thread_cached_piece_entry_num_contiguous_blocks_get(swigCPtr, this);
    }
  
    public void setNext_block_to_hash(int value) {
      libtorrent_jni.disk_io_thread_cached_piece_entry_next_block_to_hash_set(swigCPtr, this, value);
    }
  
    public int getNext_block_to_hash() {
      return libtorrent_jni.disk_io_thread_cached_piece_entry_next_block_to_hash_get(swigCPtr, this);
    }
  
    public void_ptr_int_pair storage_piece_pair() {
      return new void_ptr_int_pair(libtorrent_jni.disk_io_thread_cached_piece_entry_storage_piece_pair(swigCPtr, this), true);
    }
  
    public cached_piece_entry() {
      this(libtorrent_jni.new_disk_io_thread_cached_piece_entry(), true);
    }
  
  }

}
