/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class disabled_storage extends storage_interface {
  private long swigCPtr;

  protected disabled_storage(long cPtr, boolean cMemoryOwn) {
    super(libtorrent_jni.disabled_storage_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(disabled_storage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_disabled_storage(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public disabled_storage(int piece_size) {
    this(libtorrent_jni.new_disabled_storage(piece_size), true);
  }

  public void set_file_priority(unsigned_char_vector arg0) {
    libtorrent_jni.disabled_storage_set_file_priority(swigCPtr, this, unsigned_char_vector.getCPtr(arg0), arg0);
  }

  public boolean has_any_file() {
    return libtorrent_jni.disabled_storage_has_any_file(swigCPtr, this);
  }

  public boolean rename_file(int arg0, String arg1) {
    return libtorrent_jni.disabled_storage_rename_file(swigCPtr, this, arg0, arg1);
  }

  public boolean release_files() {
    return libtorrent_jni.disabled_storage_release_files(swigCPtr, this);
  }

  public boolean delete_files() {
    return libtorrent_jni.disabled_storage_delete_files(swigCPtr, this);
  }

  public boolean initialize(boolean arg0) {
    return libtorrent_jni.disabled_storage_initialize(swigCPtr, this, arg0);
  }

  public int move_storage(String arg0, int arg1) {
    return libtorrent_jni.disabled_storage_move_storage(swigCPtr, this, arg0, arg1);
  }

  public int read(String arg0, int arg1, int arg2, int size) {
    return libtorrent_jni.disabled_storage_read(swigCPtr, this, arg0, arg1, arg2, size);
  }

  public int write(String arg0, int arg1, int arg2, int size) {
    return libtorrent_jni.disabled_storage_write(swigCPtr, this, arg0, arg1, arg2, size);
  }

  public long physical_offset(int arg0, int arg1) {
    return libtorrent_jni.disabled_storage_physical_offset(swigCPtr, this, arg0, arg1);
  }

  public int readv(SWIGTYPE_p_file__iovec_t bufs, int slot, int offset, int num_bufs, int flags) {
    return libtorrent_jni.disabled_storage_readv__SWIG_0(swigCPtr, this, SWIGTYPE_p_file__iovec_t.getCPtr(bufs), slot, offset, num_bufs, flags);
  }

  public int readv(SWIGTYPE_p_file__iovec_t bufs, int slot, int offset, int num_bufs) {
    return libtorrent_jni.disabled_storage_readv__SWIG_1(swigCPtr, this, SWIGTYPE_p_file__iovec_t.getCPtr(bufs), slot, offset, num_bufs);
  }

  public int writev(SWIGTYPE_p_file__iovec_t bufs, int slot, int offset, int num_bufs, int flags) {
    return libtorrent_jni.disabled_storage_writev__SWIG_0(swigCPtr, this, SWIGTYPE_p_file__iovec_t.getCPtr(bufs), slot, offset, num_bufs, flags);
  }

  public int writev(SWIGTYPE_p_file__iovec_t bufs, int slot, int offset, int num_bufs) {
    return libtorrent_jni.disabled_storage_writev__SWIG_1(swigCPtr, this, SWIGTYPE_p_file__iovec_t.getCPtr(bufs), slot, offset, num_bufs);
  }

  public boolean move_slot(int arg0, int arg1) {
    return libtorrent_jni.disabled_storage_move_slot(swigCPtr, this, arg0, arg1);
  }

  public boolean swap_slots(int arg0, int arg1) {
    return libtorrent_jni.disabled_storage_swap_slots(swigCPtr, this, arg0, arg1);
  }

  public boolean swap_slots3(int arg0, int arg1, int arg2) {
    return libtorrent_jni.disabled_storage_swap_slots3(swigCPtr, this, arg0, arg1, arg2);
  }

  public boolean verify_resume_data(lazy_entry arg0, error_code arg1) {
    return libtorrent_jni.disabled_storage_verify_resume_data(swigCPtr, this, lazy_entry.getCPtr(arg0), arg0, error_code.getCPtr(arg1), arg1);
  }

  public boolean write_resume_data(entry arg0) {
    return libtorrent_jni.disabled_storage_write_resume_data(swigCPtr, this, entry.getCPtr(arg0), arg0);
  }

  public void setM_piece_size(int value) {
    libtorrent_jni.disabled_storage_m_piece_size_set(swigCPtr, this, value);
  }

  public int getM_piece_size() {
    return libtorrent_jni.disabled_storage_m_piece_size_get(swigCPtr, this);
  }

}
