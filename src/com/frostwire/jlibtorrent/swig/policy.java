/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class policy {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected policy(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(policy obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_policy(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public policy(torrent t) {
    this(libtorrent_jni.new_policy(torrent.getCPtr(t), t), true);
  }

  static public class peer {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected peer(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(peer obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libtorrent_jni.delete_policy_peer(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public peer(int port, boolean connectable, int src) {
      this(libtorrent_jni.new_policy_peer(port, connectable, src), true);
    }
  
    public long total_download() {
      return libtorrent_jni.policy_peer_total_download(swigCPtr, this);
    }
  
    public long total_upload() {
      return libtorrent_jni.policy_peer_total_upload(swigCPtr, this);
    }
  
  }

}
