/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class picker_log_alert extends peer_alert {
  private transient long swigCPtr;

  protected picker_log_alert(long cPtr, boolean cMemoryOwn) {
    super(libtorrent_jni.picker_log_alert_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(picker_log_alert obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_picker_log_alert(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public int type() {
    return libtorrent_jni.picker_log_alert_type(swigCPtr, this);
  }

  public int category() {
    return libtorrent_jni.picker_log_alert_category(swigCPtr, this);
  }

  public String what() {
    return libtorrent_jni.picker_log_alert_what(swigCPtr, this);
  }

  public String message() {
    return libtorrent_jni.picker_log_alert_message(swigCPtr, this);
  }

  public void setPicker_flags(long value) {
    libtorrent_jni.picker_log_alert_picker_flags_set(swigCPtr, this, value);
  }

  public long getPicker_flags() {
    return libtorrent_jni.picker_log_alert_picker_flags_get(swigCPtr, this);
  }

  public final static int priority = libtorrent_jni.picker_log_alert_priority_get();
  public final static int alert_type = libtorrent_jni.picker_log_alert_alert_type_get();
  public final static int static_category = libtorrent_jni.picker_log_alert_static_category_get();
  public enum picker_flags_t {
    partial_ratio(libtorrent_jni.picker_log_alert_partial_ratio_get()),
    prioritize_partials(libtorrent_jni.picker_log_alert_prioritize_partials_get()),
    rarest_first_partials(libtorrent_jni.picker_log_alert_rarest_first_partials_get()),
    rarest_first(libtorrent_jni.picker_log_alert_rarest_first_get()),
    reverse_rarest_first(libtorrent_jni.picker_log_alert_reverse_rarest_first_get()),
    suggested_pieces(libtorrent_jni.picker_log_alert_suggested_pieces_get()),
    prio_sequential_pieces(libtorrent_jni.picker_log_alert_prio_sequential_pieces_get()),
    sequential_pieces(libtorrent_jni.picker_log_alert_sequential_pieces_get()),
    reverse_pieces(libtorrent_jni.picker_log_alert_reverse_pieces_get()),
    time_critical(libtorrent_jni.picker_log_alert_time_critical_get()),
    random_pieces(libtorrent_jni.picker_log_alert_random_pieces_get()),
    prefer_contiguous(libtorrent_jni.picker_log_alert_prefer_contiguous_get()),
    reverse_sequential(libtorrent_jni.picker_log_alert_reverse_sequential_get()),
    backup1(libtorrent_jni.picker_log_alert_backup1_get()),
    backup2(libtorrent_jni.picker_log_alert_backup2_get()),
    end_game(libtorrent_jni.picker_log_alert_end_game_get());

    public final int swigValue() {
      return swigValue;
    }

    public static picker_flags_t swigToEnum(int swigValue) {
      picker_flags_t[] swigValues = picker_flags_t.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (picker_flags_t swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + picker_flags_t.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private picker_flags_t() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private picker_flags_t(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private picker_flags_t(picker_flags_t swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
