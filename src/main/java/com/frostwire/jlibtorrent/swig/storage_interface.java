/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class storage_interface {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected storage_interface(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(storage_interface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_storage_interface(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void initialize(storage_error ec) {
    libtorrent_jni.storage_interface_initialize(swigCPtr, this, storage_error.getCPtr(ec), ec);
  }

  public int readv(iovec_span bufs, int piece, int offset, int flags, storage_error ec) {
    return libtorrent_jni.storage_interface_readv(swigCPtr, this, iovec_span.getCPtr(bufs), bufs, piece, offset, flags, storage_error.getCPtr(ec), ec);
  }

  public int writev(iovec_span bufs, int piece, int offset, int flags, storage_error ec) {
    return libtorrent_jni.storage_interface_writev(swigCPtr, this, iovec_span.getCPtr(bufs), bufs, piece, offset, flags, storage_error.getCPtr(ec), ec);
  }

  public boolean has_any_file(storage_error ec) {
    return libtorrent_jni.storage_interface_has_any_file(swigCPtr, this, storage_error.getCPtr(ec), ec);
  }

  public void set_file_priority(byte_vector prio, storage_error ec) {
    libtorrent_jni.storage_interface_set_file_priority(swigCPtr, this, byte_vector.getCPtr(prio), prio, storage_error.getCPtr(ec), ec);
  }

  public int move_storage(String save_path, int flags, storage_error ec) {
    return libtorrent_jni.storage_interface_move_storage(swigCPtr, this, save_path, flags, storage_error.getCPtr(ec), ec);
  }

  public boolean verify_resume_data(add_torrent_params rd, string_vector links, storage_error ec) {
    return libtorrent_jni.storage_interface_verify_resume_data(swigCPtr, this, add_torrent_params.getCPtr(rd), rd, string_vector.getCPtr(links), links, storage_error.getCPtr(ec), ec);
  }

  public void release_files(storage_error ec) {
    libtorrent_jni.storage_interface_release_files(swigCPtr, this, storage_error.getCPtr(ec), ec);
  }

  public void rename_file(int index, String new_filename, storage_error ec) {
    libtorrent_jni.storage_interface_rename_file(swigCPtr, this, index, new_filename, storage_error.getCPtr(ec), ec);
  }

  public void delete_files(int options, storage_error ec) {
    libtorrent_jni.storage_interface_delete_files(swigCPtr, this, options, storage_error.getCPtr(ec), ec);
  }

  public boolean tick() {
    return libtorrent_jni.storage_interface_tick(swigCPtr, this);
  }

}
