sudo: required
dist: trusty

matrix:
  include:
    - language: android
      env: os_build=android android_arch=arm android_target=android-16 android_abi=armeabi-v7a
    - language: android
      env: os_build=android android_arch=arm64 android_target=android-16 android_abi=arm64-v8a
    - language: android
      env: os_build=android android_arch=x86 android_target=android-16 android_abi=x86
    - language: android
      env: os_build=android android_arch=x86_64 android_target=android-16 android_abi=x86_64
    - language: java
      env: os_build=linux os_arch=x86
    - language: java
      env: os_build=linux os_arch=x86_64
    - language: java
      env: os_build=windows os_arch=x86
    - language: java
      env: os_build=windows os_arch=x86_64
    - language: java
      os: osx
      env: os_build=macosx

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

android:
  components:
    - tools
    - platform-tools
    - build-tools-23.0.1
    - android-23

before_install:
  - wget -O gradle-bin.zip https://services.gradle.org/distributions/gradle-2.12-bin.zip
  - unzip -qq gradle-bin.zip
  - export GRADLE_HOME=$PWD/gradle-2.12
  - export PATH=$GRADLE_HOME/bin:$PATH

  - wget -O boost.zip https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.zip/download
  - unzip -qq boost.zip
  - cd boost_1_60_0
  - ./bootstrap.sh
  - cd ..
  - export BOOST_ROOT=$PWD/boost_1_60_0

  - wget -O openssl.tar.gz http://openssl.org/source/openssl-1.0.2g.tar.gz
  - tar -xzf openssl.tar.gz
  - export OPENSSL_ROOT=$PWD/openssl-1.0.2g

  - git clone https://github.com/arvidn/libtorrent
  - cd libtorrent
  - git checkout 2921caf95e851a7918026dc159b1717ef5045f30
  - cd ..
  - export LIBTORRENT_ROOT=$PWD/libtorrent

  - if [[ $os_build == "android" ]]; then
    wget -O android-ndk.zip http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip;
    echo "Extracting NDK...wait";
    unzip -qq android-ndk.zip;
    export NDK=$PWD/android-ndk-r11c;
    $NDK/build/tools/make-standalone-toolchain.sh --arch=$android_arch --platform=$android_target --install-dir=android-toolchain;
    export ANDROID_TOOLCHAIN=$PWD/android-toolchain;
    fi

before_script:
  - cd swig
  - if [[ $os_build == "android" && $android_arch = "arm" ]]; then ./build.sh --androidarm32; fi

script: true

#  - if [[ $os_build == "android" ]]; then cd android; ./travis_script.sh; fi
