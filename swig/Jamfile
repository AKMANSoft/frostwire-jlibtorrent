import os ;

BOOST_ROOT = [ os.environ BOOST_ROOT ] ;
ECHO "BOOST_ROOT = "$(BOOST_ROOT) ;
if ! $(BOOST_ROOT)
{
	EXIT "You need to define BOOST_ROOT" ;
}

LIBTORRENT_ROOT = [ os.environ LIBTORRENT_ROOT ] ;
ECHO "LIBTORRENT_ROOT = "$(LIBTORRENT_ROOT) ;
if ! $(LIBTORRENT_ROOT)
{
	EXIT "You need to define LIBTORRENT_ROOT" ;
}

use-project /torrent : $(LIBTORRENT_ROOT) ;

rule libtorrent_linking ( properties * )
{
    local result ;

    result += <variant>release ;
    result += <deprecated-functions>off ;
    result += <logging>on ;
    result += <crypto>openssl ;
    result += <disk-stats>on ;
    result += <utp-log>on ;
    result += <windows-version>xp ;
    result += <warnings>off ;
    result += <rtti>off ;

    return $(result) ;
}

feature wrap-posix : off on : composite propagated link-incompatible ;
feature.compose <wrap-posix>on :
    <define>WRAP_POSIX
    <cxxflags>-Wl,-wrap,open
    <cxxflags>-Wl,-wrap,stat
    <cxxflags>-Wl,-wrap,mkdir
    <cxxflags>-Wl,-wrap,rename
    <cxxflags>-Wl,-wrap,remove
    ;

lib jlibtorrent

    : # sources
	 libtorrent_jni.cpp

    : # requirements
    <conditional>@libtorrent_linking
    <library>/torrent//torrent/<link>static
    <include>.

    : # default build
    <link>shared

    : # usage-requirements
    <include>.
    ;
